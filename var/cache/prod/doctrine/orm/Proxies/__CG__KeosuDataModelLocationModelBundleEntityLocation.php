<?php

namespace Proxies\__CG__\Keosu\DataModel\LocationModelBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Location extends \Keosu\DataModel\LocationModelBundle\Entity\Location implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'description', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'lat', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'lng', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'enableComments', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'tags', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'distance'];
        }

        return ['__isInitialized__', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'name', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'description', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'lat', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'lng', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'enableComments', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'tags', '' . "\0" . 'Keosu\\DataModel\\LocationModelBundle\\Entity\\Location' . "\0" . 'distance'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Location $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setLat($lat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLat', [$lat]);

        return parent::setLat($lat);
    }

    /**
     * {@inheritDoc}
     */
    public function getLat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLat', []);

        return parent::getLat();
    }

    /**
     * {@inheritDoc}
     */
    public function setLng($lng)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLng', [$lng]);

        return parent::setLng($lng);
    }

    /**
     * {@inheritDoc}
     */
    public function getLng()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLng', []);

        return parent::getLng();
    }

    /**
     * {@inheritDoc}
     */
    public function getDistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistance', []);

        return parent::getDistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistance($dist)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistance', [$dist]);

        return parent::setDistance($dist);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnableComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnableComments', []);

        return parent::getEnableComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnableComments($enableComments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnableComments', [$enableComments]);

        return parent::setEnableComments($enableComments);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataModelObjectName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataModelObjectName', []);

        return parent::getDataModelObjectName();
    }

    /**
     * {@inheritDoc}
     */
    public function addTag(\Keosu\DataModel\LocationModelBundle\Entity\LocationTags $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTag', [$tags]);

        return parent::addTag($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTag(\Keosu\DataModel\LocationModelBundle\Entity\LocationTags $tag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTag', [$tag]);

        return parent::removeTag($tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', []);

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags(\Doctrine\Common\Collections\ArrayCollection $tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', [$tags]);

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReader($reader)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReader', [$reader]);

        return parent::setReader($reader);
    }

    /**
     * {@inheritDoc}
     */
    public function getReader()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReader', []);

        return parent::getReader();
    }

}
